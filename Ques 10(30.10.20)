Ques: Count number of ways to reach destination in a maze with obstacles.

Soln:

  int countPaths(vector<vector<int>>maze)
  {
    int r=maze.size(),c=maze[0].size();
    
    if (maze[0][0]==-1) return 0;
    
    for(int i=0;i<r;i++)
    {
      if(maze[i][0] == 0)
      maze[i][0]=1;
      else
      break;
    
    }
    
    for(int i=1;i<c;i++)
    {
      if(maze[0][i] == 0)
      maze[0][i]=1;
      else
      break;
    
    }
        
     
    for(int i=1;i<r;i++)
    {
      for(int j=1;j<c;j++)
      {
        if(maze[i][j]==-1) continue;
        
        if(maze[i-1][j]>0) maze[i][j]=maze[i-1][j]+maze[i][j];
        
        if(maze[i][j-1]>0) maze[i][j]=maze[i][j-1]+maze[i][j];
      }
   }
   
   return maze[r-1][c-1]>0: maze[r-1][c-1]:0;
 }
